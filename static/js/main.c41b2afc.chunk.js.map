{"version":3,"sources":["reducers/errorReducer.js","reducers/defaultState.js","reducers/displayReducer.js","reducers/loadingReducer.js","reducers/weatherReducer.js","reducers/index.js","Utils/getWeather.js","Utils/getWeatherCoords.js","Components/Tabs.jsx","actions/index.js","Utils/WeatherBackgrounds.js","Components/WeatherDisplays/CurrentDisplay.jsx","Components/WeatherDisplays/HourlyDisplay.jsx","Components/WeatherDisplays/DailyDisplay.jsx","Components/WeatherDisplays/ErrorDisplay.jsx","Components/WeatherDisplays/LoadingDisplay.jsx","Components/Box.jsx","Components/App.jsx","index.jsx"],"names":["error","exists","disableLocation","message","displayed","loading","load","animation","weather","location","timezone","currently","icon","daily","hourly","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","cancelLoad","getWeather","searchLoc","axios","get","concat","then","response","Promise","resolve","catch","e","reject","getWeatherFromCoords","lat","long","Tabs","display","preventDefault","this","props","displayChange","_this","react_default","a","createElement","className","href","onClick","changeDisplay","apply","id","target","rel","Component","connect","ownProps","dispatch","weatherBackgrounds","DEFAULT","CLEAR_DAY","CLEAR_NIGHT","PARTLY_CLOUDY_DAY","PARTLY_CLOUDY_NIGHT","CLOUDY","RAIN","SLEET","SNOW","WIND","FOG","CurrentDisplay","time","moment","tz","format","windBearing","toUpperCase","replace","temperature","apparentTemperature","react_skycons_default","color","autoplay","summary","precipProbability","humidity","windSpeed","uvIndex","HourlyDisplay","weatherRender","data","map","hour","i","key","DailyDisplay","day","temperatureHigh","temperatureLow","slice","ErrorDisplay","LoadingDisplay","getSkycons","skycon","startDirection","animated","skyconClass","allSkycons","Box","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getDisplay","bind","assertThisInitialized","WeatherDisplays_LoadingDisplay","WeatherDisplays_ErrorDisplay","WeatherDisplays_CurrentDisplay","WeatherDisplays_HourlyDisplay","WeatherDisplays_DailyDisplay","panelToBeDisplayed","children","App","handleChange","input","value","handleSubmit","loc","document","getElementById","fetchWeather","handleLocation","window","navigator","geolocation","getCurrentPosition","pos","fetchWeatherFromCoords","coords","latitude","longitude","err","locationError","console","log","containerClass","Components_Tabs","Components_Box","onSubmit","onChange","autoComplete","autoFocus","disabled","res","status","Error","_res$data$result","result","getWeatherCoords","_res$data","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","Components_App","querySelector"],"mappings":"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","file":"static/js/main.c41b2afc.chunk.js","sourcesContent":["import defaultState from './defaultState';\n\nlet { error } = defaultState\nexport default (state = error, action) => {\n    switch (action.type) {\n        case 'ERROR':\n            return { ...state, exists: true, message: action.message };\n        case 'LOCATION_ERROR':\n            return { ...state, exists: true, message: action.message, disableLocation: true }\n        case 'FETCH_WEATHER':\n            return { ...state, exists: false };\n        case 'FETCH_WEATHER_FROM_COORDS':\n            return { ...state, exists: false };\n        case 'LOADING':\n            return { ...state, exists: false }\n        default:\n            return state\n    }\n}\n\n","export default {\n    weather: {\n        location: 'New York',\n        timezone: 'America/New_York',\n        currently: {\n            icon: 'DEFAULT'\n        },\n        daily: {},\n        hourly: {}\n    },\n    loading: {\n        load: true,\n        animation: false\n    },\n    error: {\n        exists: false,\n        disableLocation: false,\n        message: ''\n    },\n    displayed: 'CURRENTLY',\n\n}","import defaultState from './defaultState';\n\nconst { displayed } = defaultState\n\nexport default (state = displayed, action) => {\n    switch (action.type) {\n        case 'CURRENTLY':\n            return action.type;\n        case 'DAILY':\n            return action.type;\n        case 'HOURLY':\n            return action.type;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState'\n\nconst { loading } = defaultState\n\nexport default (state = loading, action) => {\n\n    let cancelLoad = { ...state, load: false, animation: true }\n    switch (action.type) {\n        case 'LOADING':\n            return { ...state, load: true, animation: true };\n        case 'FETCH_WEATHER':\n            return cancelLoad;\n        case 'FETCH_WEATHER_FROM_COORDS':\n            return cancelLoad;\n        case 'ERROR':\n            return cancelLoad;\n        case 'LOCATION_ERROR':\n            return cancelLoad;\n        default:\n            return state\n    }\n}","import defaultState from './defaultState';\n\nlet { weather } = defaultState\n\nexport default (state = weather, action) => {\n    const { currently, hourly, daily, timezone, location } = action\n\n\n    switch (action.type) {\n        case 'FETCH_WEATHER':\n            return { ...state, currently, hourly, daily, timezone, location };\n        case 'FETCH_WEATHER_FROM_COORDS':\n            return { ...state, currently, hourly, daily, timezone, location };\n        default:\n            return state\n    }\n}","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport displayReducer from './displayReducer';\nimport loadingReducer from './loadingReducer';\nimport weatherReducer from './weatherReducer';\nexport default combineReducers({\n    weather: weatherReducer,\n    loading: loadingReducer,\n    error: errorReducer,\n    displayed: displayReducer,\n})","import axios from 'axios';\n\n\nconst getWeather = (searchLoc) => {\n    return axios.get(`https://cors-anywhere.herokuapp.com/https://microservices-api.herokuapp.com/api/weather/${searchLoc}`)\n        .then((response) => {\n            return Promise.resolve(response)\n        }).catch((e) => {\n            return Promise.reject(e)\n        })\n}\n\n\nexport default getWeather\n","import axios from 'axios';\nconst getWeatherFromCoords = (lat, long) => {\n    return axios.get(`https://cors-anywhere.herokuapp.com/https://microservices-api.herokuapp.com/api/weathercoords/?latitude=${lat}&longitude=${long}`)\n        .then((response) => {\n            return Promise.resolve(response)\n        }).catch((e) => {\n            return Promise.reject(e)\n        })\n}\nexport default getWeatherFromCoords","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { displayChange } from '../actions';\n\nclass Tabs extends Component {\n\n    componentDidMount() {\n    }\n\n    changeDisplay(e, display) {\n        e.preventDefault();\n        this.props.displayChange(display)\n    }\n\n    render() {\n        return (\n            <div className=\"tabs is-toggle is-rounded is-fullwidth TWBold\">\n                <ul>\n                    <li className={this.props.displayed === 'CURRENTLY' ? \"is-active\" : \"inactive\"} >\n                        <a className=\"tab\" href=\"/\" onClick={(e) => this.changeDisplay.apply(this, [e, 'CURRENTLY'])}>\n\n                            <span className=\"has-text-light\">Now</span>\n                        </a>\n                    </li>\n                    <li className={this.props.displayed === 'HOURLY' ? \"is-active\" : \"inactive\"}>\n                        <a className=\"tab\" href=\"/\" onClick={(e) => this.changeDisplay.apply(this, [e, 'HOURLY'])}>\n\n                            <span className=\"has-text-light\">24hr</span>\n                        </a>\n                    </li>\n                    <li className={this.props.displayed === 'DAILY' ? \"is-active\" : \"inactive\"}>\n                        <a className=\"tab\" href=\"/\" onClick={(e) => this.changeDisplay.apply(this, [e, 'DAILY'])}>\n\n                            <span className=\"has-text-light\">This Week</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a id=\"logo-tab\" href=\"https://omarjuice.github.io/\" className=\"has-text-centered\" target=\"_blank\" rel=\"noopener noreferrer\">\n\n                            <span className=\"is-invisible\">OJ</span>\n                        </a>\n                    </li>\n\n                </ul>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        displayed: state.displayed\n    }\n}\nexport default connect(mapStateToProps, { displayChange })(Tabs)\n","import getWeather from '../Utils/getWeather';\nimport getWeatherCoords from '../Utils/getWeatherCoords';\n\nexport const fetchWeather = (location) => dispatch => {\n\n    return getWeather(location)\n        .then((res) => {\n            if (res.status !== 200) {\n                throw new Error(res)\n            }\n            const { currently, hourly, daily, timezone } = res.data.result\n            dispatch({\n                type: 'FETCH_WEATHER',\n                currently,\n                hourly,\n                daily,\n                timezone,\n                location: res.data.location,\n            })\n        }).catch((e) => {\n            dispatch({\n                type: 'ERROR',\n                message: `I couldn't find the weather for that location.`\n            })\n        })\n\n}\nexport const fetchWeatherFromCoords = (lat, long) => dispatch => {\n    return getWeatherCoords(lat, long)\n        .then((res) => {\n            if (res.status !== 200) {\n                throw new Error(res)\n            }\n            const { currently, hourly, daily, timezone } = res.data\n            return dispatch({\n                type: 'FETCH_WEATHER_FROM_COORDS',\n                currently,\n                daily,\n                hourly,\n                timezone,\n                location: `${res.data.latitude}, ${res.data.longitude}`\n            })\n        }).catch((err) => {\n            return dispatch({\n                type: 'ERROR'\n            })\n        })\n}\n\nexport const loading = () => dispatch => {\n    return dispatch({\n        type: 'LOADING',\n    })\n}\nexport const locationError = () => dispatch => {\n    return dispatch({\n        type: 'LOCATION_ERROR',\n        message: 'Please enable your location!'\n    })\n}\n\nexport const displayChange = (display) => (dispatch) => {\n    return dispatch({\n        type: display\n    })\n}","const weatherBackgrounds = {\n    'DEFAULT': 'background-default',\n    'CLEAR_DAY': 'background-clear-day',\n    'CLEAR_NIGHT': 'background-clear-night',\n    'PARTLY_CLOUDY_DAY': 'background-partly-cloudy-day',\n    'PARTLY_CLOUDY_NIGHT': 'background-partly-cloudy-night',\n    'CLOUDY': 'background-cloudy',\n    'RAIN': 'background-rain',\n    'SLEET': 'background-snow',\n    'SNOW': 'background-snow',\n    'WIND': 'background-wind',\n    'FOG': 'background-fog'\n}\n\nexport default weatherBackgrounds","import React, { Component } from 'react';\nimport Skycons from 'react-skycons'\nimport moment from 'moment-timezone'\nimport { connect } from 'react-redux';\nconst getCompassDirection = (deg) => {\n\n    let arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"]\n    return arr[(deg / 22.5 + .5) % 16 | 0]\n}\n\nclass CurrentDisplay extends Component {\n\n\n    render() {\n        let time = moment.tz(this.props.weather.time * 1000, this.props.timezone).format('h:mm a')\n        let windBearing = getCompassDirection(this.props.weather.windBearing)\n        let icon = this.props.weather.icon.toUpperCase().replace(/-/g, '_')\n\n\n        return (\n            <div className=\"columns is-centered is-multiline is-mobile weather-display has-text-light\">\n                <div id=\"current-time\" className=\"column is-full has-text-centered TWBold title is-4 has-text-light\">{time}</div>\n                <div id=\"location\" className=\"column is-full\">\n                    <h1 className=\"title is-4 has-text-centered TWBold has-text-light\">{this.props.location}</h1>\n                </div>\n                <div className=\"column is-half has-text-centered\">\n\n                    <h1 className=\"title is-1 is-size-3-mobile TWBold has-text-light\">{this.props.weather.temperature | 0}°F</h1>\n                    <p className=\"is-size-5 is-size-7-mobile TWBold\">Feels Like: {this.props.weather.apparentTemperature | 0}°F</p>\n                </div>\n                <div className=\"column is-half has-text-centered large-skycon\">\n                    <Skycons\n                        color='white'\n                        icon={icon}\n                        autoplay={true}\n                    /></div>\n                <div id=\"summary\" className=\"column is-full has-text-centered TWBold\">\n                    <p className=\"is-size-4 is-size-6-mobile\">{this.props.weather.summary}\n                    </p>\n                </div>\n                <div className=\"column is-half has-text-centered TWBold\">\n                    <p className=\"is-size-4 is-size-6-mobile\">Precipitation\n                    <br className=\"buffer\" />\n                        <span className=\"icon\"><i className=\"fas fa-umbrella\"></i></span>\n                        {this.props.weather.precipProbability}%\n                    </p>\n                </div>\n                <div className=\"column is-half has-text-centered TWBold\">\n                    <p className=\"is-size-4 is-size-6-mobile\">Humidity\n                    <br className=\"buffer\" />\n                        <span className=\"icon\"><i className=\"fas fa-tint\"></i></span>\n                        {this.props.weather.humidity}\n                    </p>\n                </div>\n                <div className=\"column is-half has-text-centered TWBold\">\n                    <p className=\"is-size-4 is-size-6-mobile\">\n                        <span className=\"icon\"><i className=\"fas fa-wind\"></i></span>\n                        {this.props.weather.windSpeed}mph\n                        <br className=\"buffer\" />\n                        <span className=\"icon\"><i className=\"fas fa-compass\"></i></span>\n                        {windBearing}\n                    </p>\n                </div>\n                <div className=\"column is-half has-text-centered TWBold\">\n                    <p className=\"is-size-4 is-size-6-mobile\">\n                        UV Index\n                        <br className=\"buffer\" />\n                        <span className=\"icon\"><i className=\"far fa-sun\"></i></span>\n                        {this.props.weather.uvIndex}\n                    </p>\n                </div>\n                <div className=\"column is-full has-text-centered\">\n                    <p className=\"is-size-5 TWBold\">Powered by <a href=\"https://www.mapbox.com/\">MapBox</a> and  <a href=\"https://darksky.net/dev\">DarkSky</a></p>\n                </div>\n\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        weather: state.weather.currently,\n        location: state.weather.location,\n        timezone: state.weather.timezone\n    }\n}\n\nexport default connect(mapStateToProps, null)(CurrentDisplay);\n","import React, { Component } from 'react';\nimport Skycons from 'react-skycons'\nimport moment from 'moment-timezone';\nimport { connect } from 'react-redux';\nclass HourlyDisplay extends Component {\n\n    render() {\n\n        let weatherRender = this.props.weather.data.map((hour, i) => {\n            if (i > 23) {\n                return null\n            }\n            let icon = hour.icon.toUpperCase().replace(/-/g, '_')\n            let time = moment(hour.time * 1000).tz(this.props.timezone).format('ha');\n            return (\n                <div key={time} className=\"column is-one-quarter small-skycon hour has-text-light\">\n                    <div className=\"is-size-4 TWBold\">{time}</div>\n\n                    <Skycons\n                        color='white'\n                        icon={icon}\n                        autoplay={true}\n                    />\n                    <div className=\"is-size-4 TW\">{hour.temperature | 0}°F</div>\n                    <div className=\"is-size-6 TW has-text-centered\">Feels Like: {hour.apparentTemperature | 0}°F </div>\n                </div>\n            )\n        })\n        return (\n            <div className=\"columns is-centered is-multiline is-mobile weather-display\">\n                {weatherRender}\n\n\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        weather: state.weather.hourly,\n        location: state.weather.location,\n        timezone: state.weather.timezone\n    }\n}\n\nexport default connect(mapStateToProps, null)(HourlyDisplay);\n","import React, { Component } from 'react';\nimport Skycons from 'react-skycons'\nimport moment from 'moment-timezone';\nimport { connect } from 'react-redux';\n\nclass DailyDisplay extends Component {\n\n    render() {\n\n        let weatherRender = this.props.weather.data.map((day) => {\n            let icon = day.icon.toUpperCase().replace(/-/g, '_')\n\n            let time = moment(day.time * 1000).tz(this.props.timezone).format('ddd');\n\n            return (\n\n                <div key={time} className=\"is-size-4 TWBold column is-full small-skycon has-text-centered day-display\">\n                    {time}\n                    <Skycons\n                        color='white'\n                        icon={icon}\n                        autoplay={true}\n                    />\n                    <p className=\"temp\"><span className=\"icon\"><i className=\"fas fa-thermometer-full\"></i></span>\n                        {day.temperatureHigh | 0}°</p>\n                    <p className=\"temp\"><span className=\"icon\"><i className=\"fas fa-thermometer-empty\"></i></span>\n                        {day.temperatureLow | 0}°</p>\n                </div>\n\n            )\n        }).slice(0, 7)\n\n        return (\n            <div className=\"columns is-centered is-multiline is-mobile weather-display has-text-white\">\n                <div id=\"weekly-summary\" className=\"column is-full has-text-centered\" ><p className=\"TWBold\">{this.props.weather.summary}</p></div>\n                {weatherRender}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        weather: state.weather.daily,\n        location: state.weather.location,\n        timezone: state.weather.timezone\n    }\n}\n\nexport default connect(mapStateToProps, null)(DailyDisplay);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nclass ErrorDisplay extends Component {\n\n\n\n    render() {\n        return (\n            <div className=\"columns is-centered is-mobile weather-display has-text-white\">\n                <div className=\"column is-two-thirds\">\n                    <h1 className=\"title is-1 TWBold has-text-light has-text-centered\">\n                        Error!\n                </h1>\n                    <h1 className=\"title is-3 TW has-text-light has-text-centered\">\n                        {this.props.error.message}\n                    </h1>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        error: state.error\n    }\n}\n\nexport default connect(mapStateToProps, null)(ErrorDisplay);\n","import React, { Component } from 'react';\nimport Skycons from 'react-skycons'\nimport { connect } from 'react-redux';\n\n\nclass LoadingDisplay extends Component {\n\n\n    getSkycons = () => {\n        const skyconsArray = ['CLEAR_DAY', 'CLEAR_NIGHT', 'PARTLY_CLOUDY_DAY', 'PARTLY_CLOUDY_NIGHT', 'CLOUDY', 'RAIN', 'SLEET', 'SNOW', 'WIND', 'FOG']\n        return skyconsArray.map((skycon, i) => {\n            let startDirection = i % 2 === 0 ? 'left' : 'right'\n            let animated = this.props.loading.animation ? 'moving-skycon' : 'centered-skycon'\n            let skyconClass = `column is-full small-skycon ${animated} ${startDirection}`\n            return (\n                <div key={skycon} className={skyconClass}>\n                    <Skycons\n                        color='white'\n                        icon={skycon}\n                        autoplay={true}\n                    />\n                </div>\n            )\n        })\n    }\n\n    render() {\n        let allSkycons = this.getSkycons()\n        return (\n            <div className=\"columns is-centered is-multiline weather-display\">\n                {allSkycons}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, location) => {\n    return {\n        loading: state.loading\n    }\n}\n\nexport default connect(mapStateToProps, null)(LoadingDisplay);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CurrentDisplay from './WeatherDisplays/CurrentDisplay';\nimport HourlyDisplay from './WeatherDisplays/HourlyDisplay';\nimport DailyDisplay from './WeatherDisplays/DailyDisplay';\nimport ErrorDisplay from './WeatherDisplays/ErrorDisplay';\nimport LoadingDisplay from './WeatherDisplays/LoadingDisplay';\nclass Box extends Component {\n    constructor(props) {\n        super(props)\n        // this.state = {\n        //     currently: this.props.weather.currently,\n        //     hourly: this.props.weather.hourly,\n        //     daily: this.props.weather.daily\n        // }\n        this.getDisplay = this.getDisplay.bind(this)\n    }\n\n    getDisplay() {\n\n        if (this.props.loading) {\n            return <LoadingDisplay />\n        }\n        if (this.props.error) {\n            return <ErrorDisplay />\n        }\n\n        if (this.props.display === 'CURRENTLY') {\n            return <CurrentDisplay />\n        } else if (this.props.display === 'HOURLY') {\n            return <HourlyDisplay />\n        } else if (this.props.display === 'DAILY') {\n            return <DailyDisplay />\n        }\n\n    }\n\n\n\n    render() {\n        let panelToBeDisplayed = this.getDisplay()\n        return (\n            <div className=\"box blurred-box\">\n                {this.props.children}\n                {panelToBeDisplayed}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        loading: state.loading.load,\n        display: state.displayed,\n        error: state.error.exists\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(Box);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchWeather, fetchWeatherFromCoords, loading, locationError } from '../actions';\nimport Tabs from './Tabs';\nimport weatherBackgrounds from '../Utils/WeatherBackgrounds';\nimport Box from './Box';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props)\n        this.input = ''\n    }\n\n    componentDidUpdate() {\n        console.log('update');\n    }\n\n    handleChange = (e) => {\n        e.preventDefault()\n        this.input = e.target.value\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        let loc = this.input\n        this.input = ''\n        document.getElementById('input').value = ''\n        if (loc.length < 1) {\n            return\n        }\n        this.props.loading()\n        this.props.fetchWeather(loc)\n    }\n\n\n    handleLocation = (e) => {\n        e.preventDefault()\n        this.props.loading()\n        window.navigator.geolocation.getCurrentPosition((pos) => {\n            this.props.fetchWeatherFromCoords(pos.coords.latitude, pos.coords.longitude)\n        }, (err) => {\n            this.props.locationError()\n        })\n    }\n\n    render() {\n        //Change background rendering to be prop based\n        let containerClass;\n\n        if (this.props.icon) {\n            containerClass = `columns is-centered ${weatherBackgrounds[this.props.icon.toUpperCase().replace(/-/g, '_')]}`\n        } else {\n            containerClass = \"columns is-centered\"\n        }\n        return (\n\n            <div id=\"container\" className={containerClass}>\n                <div className=\"column is-one-third-desktop is-half-tablet is-full-mobile\">\n                    <Tabs />\n                    <Box>\n                        <form id=\"search-form\" action=\"\" onSubmit={this.handleSubmit} >\n                            <input id=\"input\" className=\"input is-primary TW\" type=\"text\" onChange={this.handleChange} autoComplete=\"off\" autoFocus />\n                            <div className=\"has-text-centered\">\n\n                                <input type=\"submit\" className=\"button is-success TWBold\" value=\"Search\" />\n                                <button className=\"button is-info\" onClick={this.handleLocation} disabled={this.props.disableLocation}>\n                                    <span className=\"icon\"><i className=\"fas fa-location-arrow\"></i></span>\n                                </button>\n                            </div>\n                        </form>\n                    </Box>\n                </div>\n            </div >\n\n\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        disableLocation: state.error.disableLocation,\n        icon: state.weather.currently.icon\n    }\n}\n\nexport default connect(mapStateToProps, { fetchWeather, fetchWeatherFromCoords, loading, locationError })(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk';\nimport reducers from './reducers'\nimport App from './Components/App';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n\nReactDOM.render(// add store to provider \n    <Provider store={store} >\n        <App />\n    </Provider>,\n    document.querySelector('#root'))"],"sourceRoot":""}